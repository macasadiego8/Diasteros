@page "/movies/create"
@inject NavigationManager navigationManager
@using ProjectMovies5.Client.Pages.Components
@inject IServiceMovie movie
@inject IErrorMessage showMessage


@if (ShowMoviesForm)

{
    <FormMovie Movie="Movie" OnValidSubmit="Create" CategoriasNoSeleccionadas="CategoriasNoSeleccionadas"></FormMovie>

}
else
{
    <div class="alert alert-info" role="alert">Cargando</div>
}

@code {

    private Movie Movie = new Movie();

    private List<MovieGenre> CategoriasNoSeleccionadas = new List<MovieGenre>();
    @* No se cargaran las peliculas si no existen categor√≠as en el sistema *@

    private bool ShowMoviesForm { get; set; } = false;

    protected async override Task OnInitializedAsync()

    {

        var responseHttp = await movie.Get<List<MovieGenre>>("api/moviegenres");

        CategoriasNoSeleccionadas = responseHttp.Response;

        ShowMoviesForm = true;

    }

    private async Task Create()
    {

        var httpResponse = await movie.Post("api/Movies", Movie);

        if (httpResponse.Error)

        {
            var body = await httpResponse.GetBody();

            await showMessage.ShowErrorMessage(body);

            Console.WriteLine(body);
        }

        else
        {

            var MovieId = httpResponse.Response;

            navigationManager.NavigateTo($"/");

        }
        Console.WriteLine($"Creando la pelicula {Movie.Name}");

    }
}